# -*- coding: utf-8 -*-
# Generated by Django 1.9.1 on 2016-01-06 23:24
from __future__ import unicode_literals

from django.conf import settings
from django.db import connection, migrations
from django.contrib.auth.models import User

from oauth2_provider.models import Application


def load_fixture(apps, schema_editor):
    User.objects.create(
        id=settings.SYSTEM_USER_ID,
        username='SystemUser',
        email='SystemUser',
        first_name='System User',
        is_staff=True,
        is_superuser=True,
        password='!'
    )

    Application.objects.create(
        id=settings.OAUTH_APP__SYSTEM_CLIENT__ID,
        user_id=settings.SYSTEM_USER_ID,
        name='__SYSTEM_CLIENT__',
        client_type='confidential',
        authorization_grant_type='Resource owner password-based',
        skip_authorization=True
    )

    Application.objects.create(
        id=settings.OAUTH_APP__PERSONAL_ACCESS_TOKEN__ID,
        user_id=settings.SYSTEM_USER_ID,
        name='Personal Access Token',
        client_type='confidential',
        authorization_grant_type='Resource owner password-based',
        skip_authorization=True
    )

    cursor = connection.cursor()
    if settings.DATABASES['default']['ENGINE'] == 'django.db.backends.postgresql_psycopg2':
        cursor.execute("select setval('{}_id_seq', {});".format(User._meta.db_table, 500))
        cursor.execute("select setval('{}_id_seq', {});".format(Application._meta.db_table, 500))
        cursor.execute(
            "ALTER TABLE \"{table}\" ALTER COLUMN \"{column}\" TYPE varchar({size}) USING \"{column}\"::varchar({size})".format(
                table=User._meta.db_table,
                column='username',
                size=75
            )
        )
    elif settings.DATABASES['default']['ENGINE'] == 'django.db.backends.mysql':
        cursor.execute("ALTER TABLE {} AUTO_INCREMENT={};".format(User._meta.db_table, 500))
        cursor.execute("ALTER TABLE {} AUTO_INCREMENT={};".format(Application._meta.db_table, 500))
        cursor.execute(
            "ALTER TABLE `{table}` MODIFY `{column}` varchar({size}) NOT NULL;".format(
                table=User._meta.db_table,
                column='username',
                size=75
            )
        )

class Migration(migrations.Migration):

    dependencies = [
        ('roller_auth', '0001_initial'),
        ('oauth2_provider', '0002_08_updates'),
    ]

    operations = [
        migrations.RunPython(load_fixture)
    ]
